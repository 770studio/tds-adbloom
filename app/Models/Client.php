<?php

namespace App\Models;

use Eloquent;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Support\Carbon;

/**
 * App\Models\Client
 *
 * @property int $id
 * @property string $short_id
 * @property string $external_id
 * @property string $name
 * @property Carbon|null $created_at
 * @property Carbon|null $updated_at
 * @property string|null $redirect_to_domain
 * @property string $status
 * @property string|null $email
 * @property-read Collection|Opportunity[] $opportunities
 * @property-read int|null $opportunities_count
 * @method static Builder|BaseModelWithAutoGeneratedShortId findByShortId($short_id)
 * @method static Builder|Client newModelQuery()
 * @method static Builder|Client newQuery()
 * @method static Builder|Client query()
 * @method static Builder|Client whereCreatedAt($value)
 * @method static Builder|Client whereEmail($value)
 * @method static Builder|Client whereExternalId($value)
 * @method static Builder|Client whereId($value)
 * @method static Builder|Client whereName($value)
 * @method static Builder|Client whereRedirectToDomain($value)
 * @method static Builder|Client whereShortId($value)
 * @method static Builder|Client whereStatus($value)
 * @method static Builder|Client whereUpdatedAt($value)
 * @mixin Eloquent
 */
class Client extends BaseModelWithAutoGeneratedShortId
{
    use HasFactory;

    const STATUSES = [
        'active' => 'active',
        'pending' => 'pending',
        'deleted' => 'deleted',
        'paused' => 'paused'
    ];

    public function opportunities()
    {
        return $this->hasMany('App\Models\Opportunity');
    }

    /**
     * Get the route key for the model.
     *
     * @return string
     */
    /*    public function getRouteKeyName()
        {
            return 'short_id';
        }*/
}
